package com.example.jetpackcompose

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.*
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.jetpackcompose.ui.theme.JetpackComposeTheme

// üîπ Activity ch√≠nh c·ªßa app
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        // setContent l√† n∆°i d·ª±ng to√†n b·ªô UI b·∫±ng Compose
        setContent {
            JetpackComposeTheme {
                Surface(
                    modifier = Modifier.fillMaxSize(),
                    color = MaterialTheme.colorScheme.background
                ) {
                    ComposeIntroScreen() // G·ªçi composable hi·ªÉn th·ªã UI
                }
            }
        }
    }
}

// üîπ M√†n h√¨nh giao di·ªán ch√≠nh (Compose function)
@Composable
fun ComposeIntroScreen() {
    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(24.dp),
        horizontalAlignment = Alignment.CenterHorizontally,
        verticalArrangement = Arrangement.SpaceBetween
    ) {
        Spacer(modifier = Modifier.height(40.dp))

        // üî∏ Ph·∫ßn n·ªôi dung gi·ªØa m√†n h√¨nh
        Column(horizontalAlignment = Alignment.CenterHorizontally) {

            // H√¨nh logo Jetpack Compose
            Image(
                painter = painterResource(id = R.drawable.logo_compose),
                contentDescription = "Jetpack Compose Logo",
                modifier = Modifier.size(120.dp)
            )

            Spacer(modifier = Modifier.height(24.dp))

            // Ti√™u ƒë·ªÅ
            Text(
                text = "Jetpack Compose",
                fontSize = 20.sp,
                fontWeight = FontWeight.Bold,
                color = Color.Black
            )

            Spacer(modifier = Modifier.height(12.dp))

            // M√¥ t·∫£
            Text(
                text = "Jetpack Compose is a modern UI toolkit for building native Android applications using a declarative programming approach.",
                fontSize = 14.sp,
                color = Color.Gray,
                textAlign = TextAlign.Center,
                modifier = Modifier.padding(horizontal = 16.dp)
            )
        }

        // üî∏ N√∫t ‚ÄúI‚Äôm ready‚Äù
        Button(
            onClick = { /* TODO: x·ª≠ l√Ω s·ª± ki·ªán khi b·∫•m n√∫t */ },
            shape = RoundedCornerShape(50),
            colors = ButtonDefaults.buttonColors(containerColor = Color(0xFF2196F3)),
            modifier = Modifier
                .fillMaxWidth()
                .height(48.dp)
        ) {
            Text("I‚Äôm ready", color = Color.White, fontSize = 16.sp)
        }
    }
}

// üîπ Th√™m Preview ƒë·ªÉ xem giao di·ªán ngay trong Android Studio
@Preview(showBackground = true, showSystemUi = true)
@Composable
fun PreviewComposeIntroScreen() {
    JetpackComposeTheme {
        ComposeIntroScreen()
    }
}
